
package Clients;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SharesBroker", targetNamespace = "http://SBWS/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SharesBroker {


    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "register", targetNamespace = "http://SBWS/", className = "Clients.Register")
    @ResponseWrapper(localName = "registerResponse", targetNamespace = "http://SBWS/", className = "Clients.RegisterResponse")
    @Action(input = "http://SBWS/SharesBroker/registerRequest", output = "http://SBWS/SharesBroker/registerResponse")
    public void register(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "currencyNames", targetNamespace = "http://SBWS/", className = "Clients.CurrencyNames")
    @ResponseWrapper(localName = "currencyNamesResponse", targetNamespace = "http://SBWS/", className = "Clients.CurrencyNamesResponse")
    @Action(input = "http://SBWS/SharesBroker/currencyNamesRequest", output = "http://SBWS/SharesBroker/currencyNamesResponse")
    public List<String> currencyNames();

    /**
     * 
     * @return
     *     returns java.util.List<Clients.Shares>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getList", targetNamespace = "http://SBWS/", className = "Clients.GetList")
    @ResponseWrapper(localName = "getListResponse", targetNamespace = "http://SBWS/", className = "Clients.GetListResponse")
    @Action(input = "http://SBWS/SharesBroker/getListRequest", output = "http://SBWS/SharesBroker/getListResponse")
    public List<Shares> getList();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws IOException_Exception
     */
    @WebMethod(operationName = "APICodes")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "APICodes", targetNamespace = "http://SBWS/", className = "Clients.APICodes")
    @ResponseWrapper(localName = "APICodesResponse", targetNamespace = "http://SBWS/", className = "Clients.APICodesResponse")
    @Action(input = "http://SBWS/SharesBroker/APICodesRequest", output = "http://SBWS/SharesBroker/APICodesResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://SBWS/SharesBroker/APICodes/Fault/IOException")
    })
    public List<String> apiCodes()
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     * @throws IOException_Exception
     */
    @WebMethod(operationName = "APIRate")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "APIRate", targetNamespace = "http://SBWS/", className = "Clients.APIRate")
    @ResponseWrapper(localName = "APIRateResponse", targetNamespace = "http://SBWS/", className = "Clients.APIRateResponse")
    @Action(input = "http://SBWS/SharesBroker/APIRateRequest", output = "http://SBWS/SharesBroker/APIRateResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://SBWS/SharesBroker/APIRate/Fault/IOException")
    })
    public double apiRate(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1)
        throws IOException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns double
     */
    @WebMethod(operationName = "GetRate")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetRate", targetNamespace = "http://SBWS/", className = "Clients.GetRate")
    @ResponseWrapper(localName = "GetRateResponse", targetNamespace = "http://SBWS/", className = "Clients.GetRateResponse")
    @Action(input = "http://SBWS/SharesBroker/GetRateRequest", output = "http://SBWS/SharesBroker/GetRateResponse")
    public double getRate(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "login", targetNamespace = "http://SBWS/", className = "Clients.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://SBWS/", className = "Clients.LoginResponse")
    @Action(input = "http://SBWS/SharesBroker/loginRequest", output = "http://SBWS/SharesBroker/loginResponse")
    public boolean login(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "sell", targetNamespace = "http://SBWS/", className = "Clients.Sell")
    @ResponseWrapper(localName = "sellResponse", targetNamespace = "http://SBWS/", className = "Clients.SellResponse")
    @Action(input = "http://SBWS/SharesBroker/sellRequest", output = "http://SBWS/SharesBroker/sellResponse")
    public void sell(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg5
     * @param arg4
     * @param arg1
     * @param arg0
     * @return
     *     returns java.util.List<Clients.Shares>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://SBWS/", className = "Clients.Add")
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://SBWS/", className = "Clients.AddResponse")
    @Action(input = "http://SBWS/SharesBroker/addRequest", output = "http://SBWS/SharesBroker/addResponse")
    public List<Shares> add(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        int arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        double arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5);

    /**
     * 
     * @param arg1
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "buy", targetNamespace = "http://SBWS/", className = "Clients.Buy")
    @ResponseWrapper(localName = "buyResponse", targetNamespace = "http://SBWS/", className = "Clients.BuyResponse")
    @Action(input = "http://SBWS/SharesBroker/buyRequest", output = "http://SBWS/SharesBroker/buyResponse")
    public void buy(
        @WebParam(name = "arg0", targetNamespace = "")
        int arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

}
