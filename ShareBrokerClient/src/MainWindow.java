
import Clients.IOException_Exception;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import Clients.Shares;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.ArrayList;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.table.TableRowSorter;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ftama
 */
public class MainWindow extends javax.swing.JFrame {
    DefaultTableModel model;
    
    
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        populateTable(getList());
        sort();
        populateComboBox();
    }
    
    public void populateTable(List<Shares> list){
        model = (DefaultTableModel) SharesTable.getModel();
        List<Shares> tableList = list;
        model.setNumRows(0);
        Object data[] = new Object[5];
        for(int i = 0; i < tableList.size();i++){
            data[0] = tableList.get(i).getCompanyInfo().getCompanySymbol();
            data[1] = tableList.get(i).getCompanyInfo().getCompanyName();
            data[2] = tableList.get(i).getCompanyInfo().getSharesNumber();
            data[3] = tableList.get(i).getSharePrice().getValue();
            data[4] = tableList.get(i).getSharePrice().getLastUpdated();
            
            model.addRow(data);
        }   
                
    }
    
    public void populateUserTable(List<Shares> list){
        DefaultTableModel userModel = (DefaultTableModel) userTable.getModel();
        List<Shares> tableList = list;
        userModel.setNumRows(0);
        Object data[] = new Object[5];
        for(int i = 0; i < tableList.size();i++){
            data[0] = tableList.get(i).getCompanyInfo().getCompanySymbol();
            data[1] = tableList.get(i).getCompanyInfo().getCompanyName();
            data[2] = tableList.get(i).getCompanyInfo().getSharesNumber();
            data[3] = tableList.get(i).getSharePrice().getValue();
            data[4] = tableList.get(i).getSharePrice().getLastUpdated();
            userModel.addRow(data);
        }
    }
    
    public void populateComboBox(){
        List<String> currNames =  new ArrayList<String>();
        try{
            currNames = apiCodes();
        }catch (Exception e){
            currNames = currencyNames();
        }
        CurrencyBox.removeAllItems();
        for (String currName : currNames) {
            CurrencyBox.addItem(currName);
        }
    }
    
    public void sort(){
        TableRowSorter<DefaultTableModel> rowSorter = new TableRowSorter<DefaultTableModel>(model);
        SharesTable.setRowSorter(rowSorter);
    }
    
    public void updateCurrency(){
        String boxItem = CurrencyBox.getItemAt(CurrencyBox.getSelectedIndex());
        List<Shares> listToConvert = getList();
        double rate;
        if(boxItem != null){
            String boxCode = boxItem.substring(0, 3);
            String data = "Currency Selected: "+ boxCode; 
            System.out.println(data); 
            //Add Try and catch
            for(int i = 0; i < listToConvert.size();i++){
                String sharecurr = listToConvert.get(i).getSharePrice().getCurrency();
                try{
                   rate = apiRate(sharecurr,boxCode);
                }
                catch (Exception e){
                    rate = getRate(sharecurr,boxCode);
                }
                double originalVal = listToConvert.get(i).getSharePrice().getValue();
                listToConvert.get(i).getSharePrice().setValue(originalVal*rate);
            }   
            model.setRowCount(0);
            populateTable(listToConvert); 
        }
    }
    
   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JFrame();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        PurchaseTable = new javax.swing.JTable();
        shareCounter = new javax.swing.JSpinner();
        buyBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        SharesTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        SearchBar = new java.awt.TextField();
        CurrencyBox = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        userNameLbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textField1 = new java.awt.TextField();
        jButton1 = new javax.swing.JButton();
        logOut = new java.awt.Button();

        popup.setBounds(new java.awt.Rectangle(0, 0, 500, 200));
        popup.setLocation(new java.awt.Point(650, 600));
        popup.setMinimumSize(new java.awt.Dimension(0, 80));
        popup.setPreferredSize(new java.awt.Dimension(250, 75));
        popup.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(300, 100));

        PurchaseTable.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        PurchaseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null}
            },
            new String [] {
                "Symbol", "Company", "Available shares", "Value", "Updated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PurchaseTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane3.setViewportView(PurchaseTable);

        buyBtn.setText("Buy");
        buyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buyBtnActionPerformed(evt);
            }
        });

        jLabel5.setText("Please select a number of share to purchase:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shareCounter, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(buyBtn)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buyBtn)
                    .addComponent(shareCounter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        popup.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, 420, 80));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(600, 300));

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        SharesTable.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        SharesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Symbol", "Company", "Available Shares", "Value", "Updated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SharesTable.setToolTipText("");
        SharesTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SharesTable.setGridColor(new java.awt.Color(255, 255, 255));
        SharesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SharesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SharesTable);

        jLabel2.setText("Currency");

        jLabel1.setText("Search");

        SearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchBarKeyReleased(evt);
            }
        });

        CurrencyBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CurrencyBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CurrencyBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CurrencyBox, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(CurrencyBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(SearchBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Home", jPanel1);

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        userTable.setFont(new java.awt.Font("Verdana", 0, 11)); // NOI18N
        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Symbol", "Company", "Owned Shares", "Value", "Updated"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        userTable.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane2.setViewportView(userTable);

        jLabel4.setText("User:");

        jLabel3.setText("Search:");

        textField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textField1KeyReleased(evt);
            }
        });

        jButton1.setText("Sell");

        logOut.setLabel("Logout");
        logOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 781, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(userNameLbl)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameLbl)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(logOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("User", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchBarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBarKeyReleased
        String content = SearchBar.getText();
        List<Shares> matchingRows = new ArrayList<Shares>();
        List<Shares> curr = getList();
        
        
        for(int j = 0 ; j < curr.size();j++){
            if(curr.get(j).getCompanyInfo().getCompanyName().toLowerCase().contains(content)){
                matchingRows.add(curr.get(j));
                    
            }
        }
        model.setRowCount(0);
        populateTable(matchingRows);
    }//GEN-LAST:event_SearchBarKeyReleased

    private void CurrencyBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CurrencyBoxActionPerformed
        updateCurrency();
    }//GEN-LAST:event_CurrencyBoxActionPerformed

    private void SharesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SharesTableMouseClicked
        // TODO add your handling code here:
        int index = SharesTable.getSelectedRow();
        System.out.println(index);
        DefaultTableModel popUpModel = (DefaultTableModel)PurchaseTable.getModel();
        
        Object[] row = new Object[5];
        row[0] = model.getValueAt(index, 0);
        row[1] = model.getValueAt(index, 1);
        row[2] = model.getValueAt(index, 2);
        row[3] = model.getValueAt(index, 3);
        row[4] = model.getValueAt(index, 4);
        
        
        
        popUpModel.setNumRows(0);
        popUpModel.addRow(row);
        popup.setVisible(true);
        
        
        
        
    }//GEN-LAST:event_SharesTableMouseClicked

    private void textField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textField1KeyReleased
            //TODO
    }//GEN-LAST:event_textField1KeyReleased

    private void logOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutActionPerformed
        Login login = new Login();
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_logOutActionPerformed

    private void buyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buyBtnActionPerformed
        DefaultTableModel userModel = (DefaultTableModel)userTable.getModel();
        DefaultTableModel popmodel = (DefaultTableModel) PurchaseTable.getModel();
        Object spinnerVal = shareCounter.getValue();
        int amount = (int) spinnerVal;
        int index = SharesTable.getSelectedRow();
        if(amount == 0){
            showMessageDialog(null, "Please enter a valid amount of shares.");
        }else if(amount < 0){
            showMessageDialog(null, "The amount of shares can't be negative.");
        }else{
            String companyName = model.getValueAt(index, 1).toString();

            System.out.println("Share name: "+companyName+" amount: "+amount);
            buy(amount, companyName);
            Object[] row = new Object[5];
            row[0] = popmodel.getValueAt(0, 0);
            row[1] = popmodel.getValueAt(0, 1);
            row[2] = amount;
            row[3] = popmodel.getValueAt(0, 3);
            row[4] = popmodel.getValueAt(0, 4);
            userModel.addRow(row);
            updateCurrency();
            shareCounter.setValue(0);
            popup.dispose();
        }
        

    }//GEN-LAST:event_buyBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CurrencyBox;
    public javax.swing.JTable PurchaseTable;
    private java.awt.TextField SearchBar;
    private javax.swing.JTable SharesTable;
    private javax.swing.JButton buyBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Button logOut;
    private javax.swing.JFrame popup;
    public javax.swing.JSpinner shareCounter;
    private java.awt.TextField textField1;
    public javax.swing.JLabel userNameLbl;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables


    private static java.util.List<Clients.Shares> getList() {
        Clients.SharesBroker_Service service = new Clients.SharesBroker_Service();
        Clients.SharesBroker port = service.getSharesBrokerPort();
        return port.getList();
    }

    private static java.util.List<java.lang.String> currencyNames() {
        Clients.SharesBroker_Service service = new Clients.SharesBroker_Service();
        Clients.SharesBroker port = service.getSharesBrokerPort();
        return port.currencyNames();
    }

    private static double getRate(java.lang.String arg0, java.lang.String arg1) {
        Clients.SharesBroker_Service service = new Clients.SharesBroker_Service();
        Clients.SharesBroker port = service.getSharesBrokerPort();
        return port.getRate(arg0, arg1);
    }

    private static java.util.List<java.lang.String> apiCodes() throws IOException_Exception {
        Clients.SharesBroker_Service service = new Clients.SharesBroker_Service();
        Clients.SharesBroker port = service.getSharesBrokerPort();
        return port.apiCodes();
    }

    private static double apiRate(java.lang.String arg0, java.lang.String arg1) throws IOException_Exception {
        Clients.SharesBroker_Service service = new Clients.SharesBroker_Service();
        Clients.SharesBroker port = service.getSharesBrokerPort();
        return port.apiRate(arg0, arg1);
    }

    private static void buy(int arg0, java.lang.String arg1) {
        Clients.SharesBroker_Service service = new Clients.SharesBroker_Service();
        Clients.SharesBroker port = service.getSharesBrokerPort();
        port.buy(arg0, arg1);
    }
}
